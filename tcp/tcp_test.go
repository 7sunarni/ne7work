package tcp

import (
	"log"
	"testing"

	"github.com/7sunarni/ne7work/utils"
)

func TestParse(t *testing.T) {
	{
		data := []byte{0x14, 0xe9, 0x14, 0xe9, 0x00, 0x46, 0xc7, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x5f, 0x69, 0x70, 0x70, 0x73, 0x04, 0x5f, 0x74, 0x63, 0x70, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x00, 0x00, 0x0c, 0x00, 0x01, 0x0a, 0x5f, 0x6e, 0x6d, 0x65, 0x61, 0x2d, 0x30, 0x31, 0x38, 0x33, 0xc0, 0x12, 0x00, 0x0c, 0x00, 0x01, 0x04, 0x5f, 0x69, 0x70, 0x70, 0xc0, 0x12, 0x00, 0x0c, 0x00, 0x01}
		h := Parse(data)
		log.Printf("%#v", h.Payload.Options)
	}

}

func TestCheckSum(t *testing.T) {
	{
		data := []byte{
			0x00, 0x14,

			0x00, 0x0a,

			0x00, 0x00,
			0x00, 0x0a,

			0x00, 0x00,
			0x00, 0x00,

			0x50, 0x02,

			0x20, 0x00,

			0xC5, 0xC1,
			// 0x00, 0x00,
			0x00, 0x00,

			0x48, 0x69,
		}
		h := Parse(data)
		log.Printf("%#v", h.Checksum(
			[4]byte{0xc0, 0xa8, 0x00, 0x1f},
			[4]byte{0xc0, 0xa8, 0x00, 0x1e},
			0x06,
			utils.ByteToUint16(0x00, 0x16)))
	}

	{
		data := []byte{
			0x11, 0x5c,

			0xdc, 0xba,

			0x28, 0xd5,
			0x41, 0xda,

			0x64, 0xe8,
			0x6a, 0x10,

			0x80, 0x18,

			0x01, 0xfe,

			0x67, 0xea,
			// 0x00, 0x00,
			0x00, 0x00,

			0x01, 0x01,
			0x08, 0x0a,
			0x5c, 0x86,
			0xc6, 0xf8,
			0xbd, 0x62,
			0xe3, 0x6f,

			0x6c, 0x69,
			0x64, 0x6f, 0x72, 0x0a,
		}
		h := Parse(data)
		log.Printf("%#v", h.Checksum(
			[4]byte{0xc0, 0xa8, 0xae, 0x80},
			[4]byte{0xc0, 0xa8, 0xae, 0x01},
			0x06,
			utils.ByteToUint16(0x00, 0x26)))
	}
}
